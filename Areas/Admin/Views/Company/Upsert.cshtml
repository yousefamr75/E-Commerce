@using Models
@model Company


<form method="post" enctype="multipart/form-data">
    <input asp-for="Id" hidden />
    
    <div class="row">

    <div class="border p-4 mt-4 ">
       
            <div class="col-12">
                <div class="row pb-2">

                    <h2 class="text-primary">@(Model.Id != 0 ? "Update" : "Create") Company</h2>
                    <hr />
               
                <div class="mb-3 row p-1">
                    <label asp-for="Name" class="p-0"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                    <div class="mb-3 row p-1">
                        <label asp-for="phoneNumber" class="p-0"></label>
                        <input asp-for="phoneNumber" class="form-control" />
                        <span asp-validation-for="phoneNumber" class="text-danger"></span>
                    </div>
                    <div class="mb-3 row p-1">
                        <label asp-for="StreetAddress" class="p-0"></label>
                        <input asp-for="StreetAddress" class="form-control" />
                        <span asp-validation-for="StreetAddress" class="text-danger"></span>
                    </div>
                    <div class="mb-3 row p-1">
                        <label asp-for="City" class="p-0"></label>
                        <input asp-for="City" class="form-control" />
                        <span asp-validation-for="City" class="text-danger"></span>
                    </div>
                    <div class="mb-3 row p-1">
                        <label asp-for="State" class="p-0"></label>
                        <input asp-for="State" class="form-control" />
                        <span asp-validation-for="State" class="text-danger"></span>
                    </div>
                    <div class="mb-3 row p-1">
                        <label asp-for="PostalCode" class="p-0"></label>
                        <input asp-for="PostalCode" class="form-control" />
                        <span asp-validation-for="PostalCode" class="text-danger"></span>
                    </div>



                    <div class="row">
                    <div class="col-6 col-md-3">
                        @if (Model.Id != 0)
                        {
                            <button type="submit" class="btn btn-primary form-control ">Update</button>

                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary form-control ">Create</button>

                        }
                    </div>

                    <div class="col-6 col-md-3">
                        <a asp-controller="Company" asp-action="Index" class="btn btn-secondary border form-control">
                            Backe To list

                        </a>
                    </div>
                </div>
            </div>

        </div>
           
        </div>
        </div>
       
        
       
</form>
@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Oct 16, 2024:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}

